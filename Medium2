##Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

#include <stdio.h>

void findMajorityElements(int arr[], int n) {
    int candidate1 = -1, candidate2 = -1, count1 = 0, count2 = 0;

    for (int i = 0; i < n; i++) {
        if (arr[i] == candidate1) {
            count1++;
        } else if (arr[i] == candidate2) {
            count2++;
        } else if (count1 == 0) {
            candidate1 = arr[i];
            count1 = 1;
        } else if (count2 == 0) {
            candidate2 = arr[i];
            count2 = 1;
        } else {
            count1--;
            count2--;
        }
    }

    count1 = count2 = 0;

  for (int i = 0; i < n; i++) {
        if (arr[i] == candidate1) {
            count1++;
        } else if (arr[i] == candidate2) {
            count2++;
        }
    }

    if (count1 > n / 3) {
        printf("%d ", candidate1);
    }
    if (count2 > n / 3) {
        printf("%d ", candidate2);
    }
}

int main() {
    int n;
    printf("Enter the size of the array: ");
    scanf("%d", &n);

int arr[n];
    printf("Enter the elements of the array: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Elements appearing more than %d times: ", n / 3);
    findMajorityElements(arr, n);

    return 0;
}



